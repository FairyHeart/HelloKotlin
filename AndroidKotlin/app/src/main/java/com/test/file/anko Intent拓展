
anko Intents拓展：

1、界面跳转
     val intent = Intent(this, OtherActivity::class.java)
     intent.putExtra("key", "vaule")
     intent.setFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)
     startActivity(intent)

     //anko 中使用 newTask()、newSingle()等代替Intent.FLAG_ACTIVITY_SINGLE_TOP相应等启动模式
     val intent2 = Intent(this, OtherActivity::class.java)
     intent2.putExtra("key", "vaule")
     startActivityForResult(intent2.newTask(), RESULT_CODE)

     //anko 中新增intentFor写法
     startActivityForResult(intentFor<OtherActivity>("key" to "传递的值").newTask(), RESULT_CODE)

     //anko库新增写法
     startActivity<OtherActivity>(
         "key" to "传递的值",
         "key2" to "传递的值2"
     )

     startActivityForResult<OtherActivity>(
          RESULT_CODE,
          "key" to "传递的值",
          "key2" to "传递的值2"
     )

2、常见等intent调用封装
    打电话：   makeCall(number)
    发送短信： sendSMS(number,[text])
    访问网页： browse(url)
    发送邮件： email(email,[subject],[text])
    分享：     share(text,[subject])

3.android 6.0需要动态权限
    在界面中添加权限申请：
     ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.CALL_PHONE), 10)

     override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray) {
            super.onRequestPermissionsResult(requestCode, permissions, grantResults)
            if (grantResults?.size > 0
                && grantResults[0] == PackageManager.PERMISSION_GRANTED
            ) {
                toast("权限被允许")
            } else {
                toast("权限被拒绝")
            }
        }

































